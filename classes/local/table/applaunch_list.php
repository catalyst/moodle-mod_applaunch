<?php
// This file is part of Moodle - http://moodle.org/
//
// Moodle is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// Moodle is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.

/**
 * Define a table to show list of applaunch activities.
 *
 * @package    mod_applaunch
 * @author     Andrew Madden <andrewmadden@catalyst-au.net>
 * @copyright  2021 Catalyst IT
 * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
 */

namespace mod_applaunch\local\table;

use mod_applaunch\applaunch;
use mod_applaunch\helper;
use mod_applaunch\app_type;
use mod_applaunch\app_type_controller;

class applaunch_list extends \flexible_table {

    /**
     * @var int Autogenerated id.
     */
    private static $autoid = 0;

    /**
     * Constructor
     *
     * @param string|null $id to be used by the table, autogenerated if null.
     */
    public function __construct($id = null) {
        global $PAGE;

        $id = (is_null($id) ? self::$autoid++ : $id);
        parent::__construct('mod_applaunch_index' . $id);

        $this->define_baseurl($PAGE->url);
        $this->set_attribute('class', 'generaltable admintable');

        // Column definition.
        $this->define_columns([
            'name',
            'description',
            'apptype',
            'actions',
        ]);

        $this->define_headers([
            get_string('table:name', 'applaunch'),
            get_string('table:description', 'applaunch'),
            get_string('table:apptype', 'applaunch'),
            get_string('actions'),
        ]);

        $this->setup();
    }

    /**
     * Display name column.
     *
     * @param applaunch $data Applaunch instance for this row.
     * @return string
     */
    protected function col_name(applaunch $data): string {
        $cm = $data->get_cm();
        return \html_writer::link(
            new \moodle_url('/mod/applaunch/view.php', ['id' => $cm->id]),
            $data->get('name')
        );
    }

    /**
     * Display description column.
     *
     * @param applaunch $data App type for this row.
     * @return string
     */
    protected function col_description(applaunch $data): string {
        return $data->get('description');
    }

    /**
     * Display app_type is being used.
     *
     * @param applaunch $data App type for this row.
     * @return string
     */
    protected function col_apptype(applaunch $data): string {
        $apptype = new app_type($data->get('apptypeid'));
        return \html_writer::link(
            new \moodle_url(app_type_controller::get_base_url(), [
                'action' => app_type_controller::ACTION_VIEW,
            ]),
            $apptype->get('name')
        );
    }

    /**
     * Display actions column.
     *
     * @param applaunch $data App type for this row.
     * @return string
     */
    protected function col_actions(applaunch $data): string {
        $actions = [];
        $cm = $data->get_cm();

        $actions[] = helper::format_icon_link(
            new \moodle_url('/course/modedit.php', ['update' => $cm->id]),
            't/edit',
            get_string('edit')
        );

        return implode('&nbsp;', $actions);
    }

    /**
     * Sets the data of the table.
     *
     * @param applaunch[] $records An array with records.
     */
    public function display(array $records) {
        foreach ($records as $record) {
            $this->add_data_keyed($this->format_row($record));
        }

        $this->finish_output();
    }
}
